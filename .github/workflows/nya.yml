name: Java CI
on: [push]
jobs:
  buildJar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build plugin jar
        run: ./gradlew jar
      - name: Upload built jar file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: build/libs/
      - name: Получение предыдущего тега
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Получение нового тега
        id: newtag
        run: |
          tag=$(cat build.gradle | grep "project.version*" | cut -d "=" -f 2,3 | tr -d "'" | tr -d \"," ")
          echo '::set-output name=tag::'$tag
      - name: Create release
        id: create_release
        if: ${{ steps.newtag.outputs.tag != steps.previoustag.outputs.tag }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.newtag.outputs.tag }}
          release_name: Release ${{ steps.newtag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        if: ${{ steps.newtag.outputs.tag != steps.previoustag.outputs.tag }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/*.jar
          asset_name: PlayerCheck.jar
          asset_content_type: application/java-archive
